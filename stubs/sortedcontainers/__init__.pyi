# As we wait for the long-running PR https://github.com/grantjenks/python-sortedcontainers/pull/107
# to be merged, here are our custom type annotations.
# These are technically stricter than what the library accepts.

from collections.abc import Callable, Iterable, MutableSequence
from typing import Protocol, TypeVar, overload

class Comparable(Protocol):
    def __lt__(self, other: Comparable) -> bool: ...
    def __eq__(self, other: object) -> bool: ...

_T = TypeVar("_T")

class SortedKeyList(MutableSequence[_T]):
    def __init__(self, key: Callable[[_T], Comparable]): ...
    def add(self, value: _T) -> None: ...
    @overload
    def __getitem__(self, idx: int) -> _T: ...
    @overload
    def __getitem__(self, idx: slice) -> MutableSequence[_T]: ...
    @overload
    def __delitem__(self, idx: int) -> None: ...
    @overload
    def __delitem__(self, idx: slice) -> None: ...
    @overload
    def __setitem__(self, idx: int, val: _T) -> None: ...
    @overload
    def __setitem__(self, idx: slice, val: Iterable[_T]) -> None: ...
    def insert(self, idx: int, val: _T) -> None: ...
    def __len__(self) -> int: ...
